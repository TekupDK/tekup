name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run TypeScript build
      run: npm run build
    
    - name: Run tests
      run: npm run test:all
      env:
        BILLY_API_KEY: ${{ secrets.BILLY_API_KEY }}
        BILLY_ORGANIZATION_ID: ${{ secrets.BILLY_ORGANIZATION_ID }}
        MCP_API_KEY: ${{ secrets.MCP_API_KEY }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        BILLY_TEST_MODE: "true"
        BILLY_DRY_RUN: "true"
    
    - name: Check for TypeScript errors
      run: npx tsc --noEmit
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: dist-${{ matrix.node-version }}
        path: dist/
        retention-days: 7

  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check formatting
      run: |
        echo "Formatting check would run here"
        echo "Consider adding prettier or eslint in future"
    
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Check for outdated dependencies
      run: npm outdated || true

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: tekup-billy-mcp:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
