version: '3.8'

services:
  # Expo Development Server
  mobile-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rendetalje-mobile-dev
    ports:
      - "19000:19000"  # Expo DevTools
      - "19001:19001"  # Expo Metro Bundler
      - "19002:19002"  # Expo Web Interface
      - "8081:8081"    # React Native Packager
    volumes:
      - ./src:/app/src
      - ./assets:/app/assets
      - ./app.json:/app/app.json
      - ./package.json:/app/package.json
      - /app/node_modules  # Anonymous volume for node_modules
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
      - EXPO_PUBLIC_API_URL=http://mobile-api:3001/api
    networks:
      - rendetalje-network
    restart: unless-stopped
    stdin_open: true
    tty: true

  # Mock Backend API for Development
  mobile-api:
    build:
      context: ./mock-api
      dockerfile: Dockerfile
    container_name: rendetalje-mobile-api
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
    networks:
      - rendetalje-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # PostgreSQL for mock data (optional)
  mobile-db:
    image: postgres:15-alpine
    container_name: rendetalje-mobile-db
    environment:
      - POSTGRES_DB=rendetalje_mobile
      - POSTGRES_USER=mobile_dev
      - POSTGRES_PASSWORD=mobile_dev_password
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - mobile-db-data:/var/lib/postgresql/data
      - ./mock-api/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rendetalje-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mobile_dev -d rendetalje_mobile"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  rendetalje-network:
    driver: bridge

volumes:
  mobile-db-data:
    driver: local
