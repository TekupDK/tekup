version: '3.8'

services:
  # MCP Server
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    ports:
      - "${MCP_PORT:-3003}:3001"
    environment:
      - NODE_ENV=production
      - PORT=${MCP_PORT:-3003}
      - MCP_PORT=${MCP_PORT:-3003}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - GOOGLE_CALENDAR_CREDENTIALS=${GOOGLE_CALENDAR_CREDENTIALS}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - BILLY_API_KEY=${BILLY_API_KEY}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Dashboard App
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    ports:
      - "${DASHBOARD_PORT:-3006}:3006"
    environment:
      - NODE_ENV=production
      - VITE_PORT=${DASHBOARD_PORT:-3006}
      - DASHBOARD_PORT=${DASHBOARD_PORT:-3006}
      - VITE_API_URL=http://mcp-server:${MCP_PORT:-3001}
    depends_on:
      - mcp-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Chatbot App
  chatbot:
    build:
      context: ./chatbot
      dockerfile: Dockerfile
    ports:
      - "${CHATBOT_PORT:-3005}:3005"
    environment:
      - NODE_ENV=production
      - VITE_PORT=${CHATBOT_PORT:-3005}
      - CHATBOT_PORT=${CHATBOT_PORT:-3005}
      - VITE_MCP_API_URL=http://mcp-server:${MCP_PORT:-3001}
    depends_on:
      - mcp-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - mcp-server
      - dashboard
      - chatbot
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT:-6378}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # PostgreSQL (if not using Supabase)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     - POSTGRES_DB=renos_calendar
  #     - POSTGRES_USER=renos
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped

volumes:
  redis_data:
  postgres_data:

networks:
  renos-calendar-network:
    name: renos-calendar-network
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.21.0.0/16
