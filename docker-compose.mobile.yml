# ðŸ“± RendetaljeOS Mobile Development Stack
#
# Starter komplet live miljÃ¸:
# - PostgreSQL database
# - Redis cache
# - NestJS Backend API
# - Expo Development Server (mobile)
#
# Brug: docker-compose -f docker-compose.mobile.yml up

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rendetalje-postgres
    environment:
      POSTGRES_DB: rendetalje
      POSTGRES_USER: rendetalje_user
      POSTGRES_PASSWORD: rendetalje_password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - rendetalje-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rendetalje_user -d rendetalje"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rendetalje-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - rendetalje-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # NestJS Backend API
  backend:
    build:
      context: ./apps/rendetalje/services/backend-nestjs
      dockerfile: Dockerfile.dev
    container_name: rendetalje-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://rendetalje_user:rendetalje_password@postgres:5432/rendetalje
      - REDIS_URL=redis://redis:6379
      - PORT=3001
      - JWT_SECRET=your-jwt-secret-change-in-production
      - CORS_ORIGIN=*
    ports:
      - "3001:3001"
    volumes:
      - ./apps/rendetalje/services/backend-nestjs/src:/app/src
      - ./apps/rendetalje/services/backend-nestjs/prisma:/app/prisma
    networks:
      - rendetalje-network
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3001/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Expo Development Server (Mobile) - Optimized with Alpine
  # Supports parallel branches with isolated ports: set EXPO_GO_PORT, EXPO_METRO_PORT, EXPO_DEVTOOLS_PORT, RCT_METRO_PORT
  mobile:
    build:
      context: ./apps/rendetalje/services/mobile
      dockerfile: Dockerfile
    working_dir: /app
    command: sh -c "npm install && npx expo-doctor || true && EXPO_DEV_CLIENT=false EXPO_NO_TELEMETRY=1 RCT_METRO_PORT=${RCT_METRO_PORT:-8081} expo start --tunnel --clear"
    container_name: rendetalje-mobile-expo-${GIT_BRANCH:-main}
    depends_on:
      - backend
    environment:
      - HOST_IP=${HOST_IP}
      - REACT_NATIVE_PACKAGER_HOSTNAME=${HOST_IP}
      - EXPO_USE_FAST_RESOLVER=1
      - EXPO_NO_TELEMETRY=1
      - RCT_METRO_PORT=${RCT_METRO_PORT:-8090}
      - EXPO_GO_PORT=${EXPO_GO_PORT:-19020}
      - EXPO_METRO_PORT=${EXPO_METRO_PORT:-19021}
      - EXPO_DEVTOOLS_PORT=${EXPO_DEVTOOLS_PORT:-19022}
      - NODE_ENV=development
    ports:
      - "${EXPO_GO_PORT:-19020}:19020" # Expo DevTools
      - "${EXPO_METRO_PORT:-19021}:19021" # Expo Metro Bundler
      - "${EXPO_DEVTOOLS_PORT:-19022}:19022" # Expo Web Interface
      - "${RCT_METRO_PORT:-8090}:8090" # React Native Packager
    volumes:
      - ./apps/rendetalje/services/mobile:/app
      - /app/node_modules # Anonymous volume for node_modules
    networks:
      - rendetalje-network
    restart: unless-stopped
    stdin_open: true
    tty: true

networks:
  rendetalje-network:
    name: rendetalje-network
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
