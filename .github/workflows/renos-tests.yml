name: RenOS Tests

on:
  push:
    branches: [master, develop]
    paths:
      - "apps/rendetalje/**"
      - ".github/workflows/renos-tests.yml"
  pull_request:
    branches: [master, develop]
    paths:
      - "apps/rendetalje/**"

jobs:
  # Backend Tests
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: apps/rendetalje/services/backend-nestjs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/rendetalje/services/backend-nestjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run unit tests
        run: npm test -- --coverage

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret
          DATABASE_URL: postgresql://test:test@localhost:5432/test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./apps/rendetalje/services/backend-nestjs/coverage/lcov.info
          flags: backend
          name: backend-coverage

  # Frontend Tests
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: apps/rendetalje/services/frontend-nextjs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/rendetalje/services/frontend-nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test -- --coverage
        env:
          NODE_ENV: test
          NEXT_PUBLIC_API_URL: http://localhost:3001

      - name: Build application
        run: npm run build
        env:
          NEXT_PUBLIC_API_URL: http://localhost:3001

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./apps/rendetalje/services/frontend-nextjs/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  # Shared Library Tests
  shared-tests:
    name: Shared Library Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: apps/rendetalje/services/shared

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/rendetalje/services/shared/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test -- --coverage

      - name: Check coverage thresholds
        run: npm test -- --coverage --coverageThreshold='{"global":{"branches":80,"functions":80,"lines":80,"statements":80}}'

      - name: Build library
        run: npm run build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./apps/rendetalje/services/shared/coverage/lcov.info
          flags: shared
          name: shared-coverage

  # Frontend E2E Tests with Playwright
  frontend-e2e-tests:
    name: Frontend E2E Tests
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests] # Ensure basic tests pass first

    defaults:
      run:
        working-directory: apps/rendetalje/services/frontend-nextjs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/rendetalje/services/frontend-nextjs/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium firefox webkit

      - name: Run Playwright E2E tests
        run: npm run test:e2e
        env:
          PLAYWRIGHT_TEST_BASE_URL: http://localhost:3000
          CI: true

      - name: Upload Playwright Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/rendetalje/services/frontend-nextjs/playwright-report/
          retention-days: 30

      - name: Upload Playwright Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results
          path: apps/rendetalje/services/frontend-nextjs/test-results/
          retention-days: 30

  # Quality Gates
  quality-check:
    name: Quality Gates
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests, shared-tests, frontend-e2e-tests]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Quality gate passed
        run: echo "âœ… All tests passed and quality gates met!"
