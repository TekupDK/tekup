{
    "name": "rendetalje-assistant",
    "version": "0.1.0",
    "private": true,
    "scripts": {
        "dev": "ts-node-dev --respawn --transpile-only src/index.ts",
        "dev:client": "cd client && npm run dev",
        "dev:all": "concurrently \"npm run dev\" \"npm run dev:client\"",
        "build": "tsc -p tsconfig.json",
        "build:client": "cd client && npm run build",
        "build:all": "npm run build && npm run build:client",
        "start": "exec node dist/index.js",
        "start:prod": "NODE_ENV=production exec node dist/index.js",
        "db:migrate": "npx prisma migrate deploy",
        "db:generate": "npx prisma generate",
        "db:push": "npx prisma db push",
        "db:pull": "npx prisma db pull",
        "db:studio": "npx prisma studio",
        "db:seed": "ts-node prisma/seed.ts",
        "db:reset": "npx prisma migrate reset",
        "supabase:migrate": "powershell -ExecutionPolicy Bypass -File ./scripts/supabase-migration.ps1",
        "docker:build": "docker-compose build",
        "docker:up": "docker-compose up -d",
        "docker:down": "docker-compose down",
        "docker:logs": "docker-compose logs -f",
        "test": "vitest run",
        "test:watch": "vitest",
        "lint": "eslint \"{src,tests}/**/*.ts\"",
        "lint:client": "cd client && npm run lint",
        "data:fetch": "ts-node src/tools/dataFetcher.ts",
        "data:gmail": "ts-node src/tools/dataFetcher.ts gmail",
        "data:calendar": "ts-node src/tools/dataFetcher.ts calendar",
        "email:ingest": "ts-node src/services/emailIngestWorker.ts",
        "email:ingest-full": "ts-node -e \"import('./src/services/emailIngestWorker').then(m => m.runEmailIngest())\"",
        "email:matching": "ts-node src/scripts/runEmailMatching.ts",
        "optimize:performance": "ts-node src/scripts/optimizePerformance.ts",
        "monitoring:setup": "ts-node src/scripts/setupUptimeMonitoring.ts",
        "customer:threads": "ts-node src/tools/customerThreadManager.ts",
        "customer:link-threads": "ts-node src/scripts/linkThreadsToCustomers.ts",
        "email:test": "ts-node src/tools/emailAutoResponseTool.ts test",
        "email:pending": "ts-node src/tools/emailAutoResponseTool.ts pending",
        "email:approve": "ts-node src/tools/emailAutoResponseTool.ts approve",
        "email:reject": "ts-node src/tools/emailAutoResponseTool.ts reject",
        "email:stats": "ts-node src/tools/emailAutoResponseTool.ts stats",
        "email:enable": "ts-node src/tools/emailAutoResponseTool.ts enable",
        "email:disable": "ts-node src/tools/emailAutoResponseTool.ts disable",
        "email:config": "ts-node src/tools/emailAutoResponseTool.ts config",
        "email:monitor": "ts-node src/tools/emailAutoResponseTool.ts monitor",
        "email:test-mock": "ts-node src/tools/testEmailResponse.ts",
        "gemini:test": "ts-node src/tools/testGeminiFeatures.ts",
        "gemini:functions": "ts-node src/tools/testFunctionCalling.ts",
        "ollama:test": "ts-node src/tools/ollamaTest.ts",
        "email:test-moving": "ts-node src/tools/testEmailResponse.ts moving",
        "leads:import": "ts-node src/tools/importHistoricalLeads.ts",
        "verify:google": "ts-node src/tools/verifyGoogleSetup.ts",
        "verify:deployment": "ts-node src/tools/verifyDeployment.ts",
        "booking:list": "ts-node src/tools/bookingManagementTool.ts list",
        "booking:availability": "ts-node src/tools/bookingManagementTool.ts availability",
        "booking:next-slot": "ts-node src/tools/bookingManagementTool.ts next-slot",
        "booking:check-slot": "ts-node src/tools/bookingManagementTool.ts check-slot",
        "booking:stats": "ts-node src/tools/bookingManagementTool.ts stats",
        "cache:stats": "ts-node src/tools/cacheMonitorTool.ts stats",
        "cache:clear": "ts-node src/tools/cacheMonitorTool.ts clear",
        "cache:cleanup": "ts-node src/tools/cacheMonitorTool.ts cleanup",
        "customer:create": "ts-node src/tools/customerManagementTool.ts create",
        "customer:list": "ts-node src/tools/customerManagementTool.ts list",
        "customer:get": "ts-node src/tools/customerManagementTool.ts get",
        "customer:stats": "ts-node src/tools/customerManagementTool.ts stats",
        "customer:conversations": "ts-node src/tools/customerManagementTool.ts conversations",
        "customer:link-lead": "ts-node src/tools/customerManagementTool.ts link-lead",
        "leads:test-parse": "ts-node src/tools/testLeadParsing.ts",
        "leads:test-workflow": "ts-node src/tools/testCompleteLeadWorkflow.ts",
        "duplicate:check": "ts-node src/tools/checkDuplicate.ts",
        "quote:validate": "ts-node src/tools/validateQuote.ts",
        "llm:test": "ts-node src/tools/testLLMProviders.ts",
        "label:init": "ts-node src/tools/labelManager.ts init",
        "label:list": "ts-node src/tools/labelManager.ts list",
        "label:apply": "ts-node src/tools/labelManager.ts apply",
        "label:status": "ts-node src/tools/labelManager.ts status",
        "label:threads": "ts-node src/tools/labelManager.ts threads",
        "label:sync": "ts-node src/tools/labelManager.ts sync",
        "label:test": "ts-node src/tools/testLabelApplication.ts",
        "follow:check": "ts-node src/tools/followUpManager.ts check",
        "follow:send": "ts-node src/tools/followUpManager.ts send",
        "follow:send-live": "ts-node src/tools/followUpManager.ts send-live",
        "follow:stats": "ts-node src/tools/followUpManager.ts stats",
        "conflict:scan": "ts-node src/tools/conflictManager.ts scan",
        "conflict:list": "ts-node src/tools/conflictManager.ts list",
        "conflict:escalate": "ts-node src/tools/conflictManager.ts escalate",
        "conflict:test": "ts-node src/tools/conflictManager.ts test",
        "conflict:stats": "ts-node src/tools/conflictManager.ts stats",
        "test:integration": "ts-node src/tools/runIntegrationTests.ts",
        "test:integration:verbose": "ts-node src/tools/runIntegrationTests.ts --verbose",
        "calendar:sync": "ts-node src/tools/calendarSyncTool.ts",
        "calendar:status": "ts-node src/tools/calendarSyncTool.ts status",
        "calendar:google-to-db": "ts-node src/tools/calendarSyncTool.ts google-to-db",
        "calendar:db-to-google": "ts-node src/tools/calendarSyncTool.ts db-to-google",
        "calendar:deduplicate": "ts-node src/tools/deduplicateCalendar.ts",
        "calendar:check-conflicts": "ts-node src/tools/checkBookingConflicts.ts",
        "customer:import": "ts-node src/tools/customerImportTool.ts",
        "customer:import-csv": "ts-node src/tools/customerImportTool.ts import-csv",
        "customer:export": "ts-node src/tools/customerImportTool.ts export",
        "customer:import-stats": "ts-node src/tools/customerImportTool.ts statistics",
        "customer:validate": "ts-node src/tools/customerImportTool.ts validate",
        "plan:test": "ts-node src/tools/testCleaningPlans.ts",
        "firecrawl:test": "ts-node src/tools/testFirecrawl.ts",
        "db:audit": "ts-node src/tools/auditDatabaseRelations.ts",
        "db:fix": "ts-node src/tools/fixDatabaseRelations.ts",
        "db:fix-live": "ts-node src/tools/fixDatabaseRelations.ts --live"
    },
    "dependencies": {
        "@clerk/clerk-sdk-node": "^4.13.23",
        "@google/generative-ai": "^0.24.1",
        "@prisma/client": "6.16.3",
        "@sentry/node": "^10.17.0",
        "@sentry/profiling-node": "^10.17.0",
        "@supabase/ssr": "^0.7.0",
        "@supabase/supabase-js": "^2.74.0",
        "@types/cors": "^2.8.19",
        "@types/node-cron": "^3.0.11",
        "@types/redis": "^4.0.10",
        "axios": "^1.7.2",
        "cors": "^2.8.5",
        "dotenv": "^16.4.5",
        "express": "^4.19.2",
        "express-rate-limit": "^8.1.0",
        "googleapis": "^131.0.0",
        "nanoid": "^5.0.7",
        "node-cron": "^4.2.1",
        "openai": "^4.28.4",
        "pino": "^9.1.0",
        "redis": "^5.8.3",
        "sanitize-html": "^2.17.0",
        "zod": "^3.23.8"
    },
    "devDependencies": {
        "@eslint/js": "^8.57.1",
        "@types/express": "^4.17.21",
        "@types/node": "^24.6.2",
        "@types/sanitize-html": "^2.16.0",
        "@types/supertest": "^2.0.16",
        "@typescript-eslint/eslint-plugin": "^8.45.0",
        "@typescript-eslint/parser": "^8.45.0",
        "concurrently": "^8.2.2",
        "eslint": "^9.36.0",
        "eslint-config-prettier": "^9.1.0",
        "eslint-plugin-vitest": "^0.4.1",
        "globals": "^16.4.0",
        "pino-pretty": "^11.0.0",
        "prisma": "^6.16.3",
        "supertest": "^7.1.3",
        "ts-node": "^10.9.2",
        "ts-node-dev": "^2.0.0",
        "typescript": "^5.9.3",
        "vitest": "^1.6.0"
    }
}
