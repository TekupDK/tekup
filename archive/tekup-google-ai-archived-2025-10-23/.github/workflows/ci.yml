name: 🔍 CI Pipeline

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  lint:
    name: 🧹 Lint Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install backend dependencies
        run: npm ci
      
      - name: Lint backend
        run: npm run lint --if-present || echo "No lint script configured"
      
      - name: Install frontend dependencies
        run: cd client && npm ci
      
      - name: Lint frontend
        run: cd client && npm run lint

  typecheck:
    name: 🔎 TypeScript Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install backend dependencies
        run: npm ci
      
      - name: TypeCheck backend
        run: npx tsc --noEmit
      
      - name: Install frontend dependencies
        run: cd client && npm ci
      
      - name: TypeCheck frontend
        run: cd client && npx tsc --noEmit

  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install backend dependencies
        run: npm ci
      
      - name: Run backend tests
        run: npm test --if-present || echo "No tests configured"
      
      - name: Install frontend dependencies
        run: cd client && npm ci
      
      - name: Run frontend tests
        run: cd client && npm test --if-present || echo "No tests configured"

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install backend dependencies
        run: npm ci
      
      - name: Audit backend dependencies
        run: npm audit --audit-level=high
        continue-on-error: true
      
      - name: Install frontend dependencies
        run: cd client && npm ci
      
      - name: Audit frontend dependencies
        run: cd client && npm audit --audit-level=high
        continue-on-error: true

  build:
    name: 🏗️ Build Application
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install backend dependencies
        run: npm ci
      
      - name: Build backend
        run: npm run build
      
      - name: Install frontend dependencies
        run: cd client && npm ci
      
      - name: Build frontend
        run: cd client && npm run build
      
      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: client/dist
          retention-days: 7

  summary:
    name: ✅ CI Summary
    runs-on: ubuntu-latest
    needs: [lint, typecheck, test, security, build]
    if: always()
    
    steps:
      - name: Check all jobs status
        run: |
          echo "🔍 CI Pipeline Results:"
          echo "Lint: ${{ needs.lint.result }}"
          echo "TypeCheck: ${{ needs.typecheck.result }}"
          echo "Tests: ${{ needs.test.result }}"
          echo "Security: ${{ needs.security.result }}"
          echo "Build: ${{ needs.build.result }}"
          
          if [ "${{ needs.lint.result }}" != "success" ] || 
             [ "${{ needs.typecheck.result }}" != "success" ] || 
             [ "${{ needs.build.result }}" != "success" ]; then
            echo "❌ CI Pipeline failed"
            exit 1
          else
            echo "✅ All checks passed!"
          fi
