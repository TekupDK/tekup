# Tekup Gmail Automation - Environment Variables
# Copy this file to .env and fill in your actual values

# ===================
# Application Config
# ===================
LOG_LEVEL=INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

# ===================
# Gmail OAuth Configuration
# ===================
# Get these from Google Cloud Console: https://console.cloud.google.com/
# 1. Create a project
# 2. Enable Gmail API
# 3. Create OAuth 2.0 Client ID credentials
GMAIL_CLIENT_ID=xxxxxxxxxxxxx.apps.googleusercontent.com
GMAIL_CLIENT_SECRET=GOCSPX-xxxxxxxxxxxxxxxxxxxxx
GMAIL_PROJECT_ID=your-project-id
GMAIL_USER_EMAIL=your-email@gmail.com

# ===================
# Google Service Account (Alternative to OAuth)
# ===================
# If using service account with domain-wide delegation
GOOGLE_CLIENT_EMAIL=your-service-account@your-project.iam.gserviceaccount.com
GOOGLE_PRIVATE_KEY=-----BEGIN PRIVATE KEY-----\nYourPrivateKeyHere\n-----END PRIVATE KEY-----
GOOGLE_IMPERSONATED_USER=user-to-impersonate@yourdomain.com

# ===================
# E-conomic Integration
# ===================
# E-conomic API credentials for receipt forwarding
ECONOMIC_RECEIPT_EMAIL=receipts@e-conomic.com
ECONOMIC_APP_SECRET_TOKEN=your-economic-app-secret-token
ECONOMIC_AGREEMENT_GRANT_TOKEN=your-economic-agreement-grant-token

# ===================
# Gmail Processing Settings
# ===================
# Label to apply to processed emails
PROCESSED_LABEL=Videresendt_econ

# How many days back to search for emails
DAYS_BACK=180

# Maximum number of emails to process per run
MAX_EMAILS=100

# ===================
# Automation Settings
# ===================
# Run in headless mode only (no browser UI)
HEADLESS_ONLY=1
# Options: 0 (show browser), 1 (headless)

# ===================
# Database (if needed)
# ===================
DATABASE_URL=postgresql://user:password@localhost:5432/gmail_automation
# Or SQLite: sqlite:///./gmail_automation.db

# ===================
# API Settings (FastAPI)
# ===================
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=true

# ===================
# Security
# ===================
# Secret key for API authentication
API_SECRET_KEY=your-secret-key-minimum-32-characters-long
JWT_SECRET=your-jwt-secret-key-here
JWT_ALGORITHM=HS256
JWT_EXPIRATION_MINUTES=60

# CORS Settings
CORS_ORIGINS=http://localhost:3000,http://localhost:8000
CORS_ALLOW_CREDENTIALS=true

# ===================
# Monitoring & Logging
# ===================
# Sentry (optional)
SENTRY_DSN=
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# Log file path (optional)
LOG_FILE_PATH=logs/gmail_automation.log
LOG_FILE_MAX_BYTES=10485760
LOG_FILE_BACKUP_COUNT=5

# ===================
# Scheduler (if using cron/background jobs)
# ===================
# Run automation every X minutes
AUTOMATION_INTERVAL_MINUTES=15

# Enable/disable automatic scheduling
ENABLE_AUTO_RUN=false

# ===================
# Google OAuth Redirect URI
# ===================
# Must match what's configured in Google Cloud Console
OAUTH_REDIRECT_URI=http://localhost:8000/auth/callback
# For production: https://yourdomain.com/auth/callback

# ===================
# Development/Testing
# ===================
# Set to 'true' to use mock data instead of real Gmail API
USE_MOCK_DATA=false

# Enable debug mode
DEBUG=false

# Dry run mode (don't actually send emails or modify Gmail)
DRY_RUN=false
