name: CI
on:
  pull_request:
  push:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup pnpm
        run: |
          corepack enable
          corepack prepare pnpm@9.10.0 --activate

      - name: Install deps
        run: pnpm install --frozen-lockfile

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Start real dependencies
        run: |
          docker compose -f docker-compose.test.yml up -d --build
          docker compose -f docker-compose.test.yml ps
          sleep 15

      - name: Migrate test DB
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/tekup_test
        run: pnpm run migrate:test

      - name: Run unit/integration tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/tekup_test
          REDIS_URL: redis://localhost:6379
          MINIO_ENDPOINT: http://localhost:9000
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: minio123
          KAFKA_BROKERS: localhost:9092
          JEST_MAX_WORKERS: 50%
        run: pnpm -r --workspace-concurrency=4 run test:ci

      - name: Run E2E/visual/a11y
        env:
          WEB_BASE_URL: http://localhost:3000
        run: pnpm -w --filter ./apps/* run e2e:ci

      - name: Contract tests
        env:
          API_BASE_URL: http://localhost:4000
        run: pnpm -w --filter ./services/* run contract:ci

      - name: Flake detection
        run: pnpm run flakes
        continue-on-error: false

      - name: Upload Jest JUnit
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit
          path: reports/junit/**/*.xml

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: reports/coverage

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-html
          path: reports/playwright-html
