{"version":3,"sources":["C:\\Users\\empir\\Tekup-org\\apps\\flow-api\\src\\ingestion\\parsers\\adhelp.spec.ts"],"sourcesContent":["import { parseAdHelp } from './adhelp.js';\r\nimport { RawEmailInput } from '../types.js';\r\n\r\ndescribe('AdHelp Parser', () => {\r\n  it('parses basic AdHelp email with structured data', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@rendetalje.dk',\r\n      subject: 'Nyt lead fra AdHelp',\r\n      from: 'sp@adhelp.dk',\r\n      rawText: 'Navn: John Doe\\nTelefon: +45 12 34 56 78\\nE-mail: john@example.com\\nAdresse: Gade 123\\nPostnr: 2100\\nBy: København\\nType: Privat rengøring\\nFrekvens: Ugentlig'\r\n    };\r\n    \r\n    const result = parseAdHelp(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('adhelp');\r\n    expect(result!.payload.brand).toBe('rendetalje');\r\n    expect(result!.payload.name).toBe('John Doe');\r\n    expect(result!.payload.phone).toBe('+4512345678');\r\n    expect(result!.payload.email).toBe('john@example.com');\r\n    expect(result!.payload.address).toBe('Gade 123');\r\n    expect(result!.payload.postal_code).toBe('2100');\r\n    expect(result!.payload.city).toBe('København');\r\n    expect(result!.payload.service_type).toBe('privat');\r\n    expect(result!.payload.frequency).toBe('ugentlig');\r\n    expect(result!.confidence).toBeGreaterThan(0.8);\r\n  });\r\n\r\n  it('parses AdHelp email with Silas Printz sender', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@foodtruck.dk',\r\n      subject: 'Catering lead',\r\n      from: 'silas@adhelp.dk',\r\n      rawText: 'Kunde: Silas Printz\\nTlf: 4512345678\\nEmail: silas@example.com\\nAdresse: Vej 456\\nBy: Aarhus\\nService: Catering til firmafest\\nAntal personer: 50\\nDato: 2023-12-15'\r\n    };\r\n    \r\n    const result = parseAdHelp(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('adhelp');\r\n    expect(result!.payload.brand).toBe('foodtruck');\r\n    expect(result!.payload.name).toBe('Silas Printz');\r\n    expect(result!.payload.phone).toBe('+4512345678');\r\n    expect(result!.payload.email).toBe('silas@example.com');\r\n    expect(result!.payload.service_type).toBe('catering');\r\n    expect(result!.confidence).toBeGreaterThan(0.7);\r\n  });\r\n\r\n  it('parses AdHelp email with variable format and colon separators', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@tekup.dk',\r\n      subject: 'IT support lead',\r\n      from: 'sp@adhelp.dk',\r\n      rawText: 'Navn: TekUp Client\\nPhone: +45 87 65 43 21\\nEmail: client@tekup.dk\\nService Type: IT Support\\nBeskrivelse: Need help with backup system\\nBemærkning: Urgent request'\r\n    };\r\n    \r\n    const result = parseAdHelp(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('adhelp');\r\n    expect(result!.payload.brand).toBe('tekup');\r\n    expect(result!.payload.name).toBe('TekUp Client');\r\n    expect(result!.payload.phone).toBe('+4587654321');\r\n    expect(result!.payload.email).toBe('client@tekup.dk');\r\n    expect(result!.payload.service_type).toBe('erhverv');\r\n    expect(result!.payload.notes).toContain('Urgent request');\r\n    expect(result!.confidence).toBeGreaterThan(0.7);\r\n  });\r\n\r\n  it('parses AdHelp email with area extraction', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@rendetalje.dk',\r\n      subject: 'Office cleaning lead',\r\n      from: 'sp@adhelp.dk',\r\n      rawText: 'Customer: Office Corp\\nPhone: 12345678\\nEmail: office@example.com\\nAddress: Business Park 1\\nArea: 200 m2\\nService: Office cleaning\\nFrequency: Monthly'\r\n    };\r\n    \r\n    const result = parseAdHelp(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('adhelp');\r\n    expect(result!.payload.brand).toBe('rendetalje');\r\n    expect(result!.payload.name).toBe('Office Corp');\r\n    expect(result!.payload.area_sqm).toBe(200);\r\n    expect(result!.payload.service_type).toBe('erhverv');\r\n    expect(result!.payload.frequency).toBe('månedlig');\r\n    expect(result!.confidence).toBeGreaterThan(0.8);\r\n  });\r\n\r\n  it('returns undefined for non-AdHelp emails', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@rendetalje.dk',\r\n      subject: 'Random email',\r\n      from: 'random@example.com',\r\n      rawText: 'This is not an AdHelp email'\r\n    };\r\n    \r\n    const result = parseAdHelp(input);\r\n    expect(result).toBeUndefined();\r\n  });\r\n\r\n  it('handles forwarded emails with quote blocks', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@rendetalje.dk',\r\n      subject: 'Fwd: Ny kunde',\r\n      from: 'sp@adhelp.dk',\r\n      rawText: 'Navn: Forwarded Customer\\nTelefon: +45 11 22 33 44\\nEmail: fwd@example.com\\n\\n-- \\n\\nFra: Original Sender\\nDato: 2023-01-01\\nThis is a forwarded email'\r\n    };\r\n    \r\n    const result = parseAdHelp(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('adhelp');\r\n    expect(result!.payload.name).toBe('Forwarded Customer');\r\n    expect(result!.payload.phone).toBe('+4511223344');\r\n    expect(result!.payload.email).toBe('fwd@example.com');\r\n    expect(result!.confidence).toBeGreaterThan(0.7);\r\n  });\r\n\r\n  it('handles very short or unclear emails with low confidence', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@rendetalje.dk',\r\n      subject: 'Kort lead',\r\n      from: 'sp@adhelp.dk',\r\n      rawText: 'Ring til: 12345678'\r\n    };\r\n    \r\n    const result = parseAdHelp(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('adhelp');\r\n    expect(result!.payload.phone).toBe('+4512345678');\r\n    expect(result!.payload.partial).toBe(true);\r\n    expect(result!.notes).toContain('Low confidence parsing');\r\n    expect(result!.confidence).toBeLessThan(0.5);\r\n  });\r\n});"],"names":["describe","it","input","mailbox","subject","from","rawText","result","parseAdHelp","expect","toBeDefined","payload","source","toBe","brand","name","phone","email","address","postal_code","city","service_type","frequency","confidence","toBeGreaterThan","notes","toContain","area_sqm","toBeUndefined","partial","toBeLessThan"],"mappings":";;;;wBAA4B;AAG5BA,SAAS,iBAAiB;IACxBC,GAAG,kDAAkD;QACnD,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACG,KAAK,EAAED,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACI,IAAI,EAAEF,IAAI,CAAC;QAClCJ,OAAOF,OAAQI,OAAO,CAACK,KAAK,EAAEH,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACM,KAAK,EAAEJ,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACO,OAAO,EAAEL,IAAI,CAAC;QACrCJ,OAAOF,OAAQI,OAAO,CAACQ,WAAW,EAAEN,IAAI,CAAC;QACzCJ,OAAOF,OAAQI,OAAO,CAACS,IAAI,EAAEP,IAAI,CAAC;QAClCJ,OAAOF,OAAQI,OAAO,CAACU,YAAY,EAAER,IAAI,CAAC;QAC1CJ,OAAOF,OAAQI,OAAO,CAACW,SAAS,EAAET,IAAI,CAAC;QACvCJ,OAAOF,OAAQgB,UAAU,EAAEC,eAAe,CAAC;IAC7C;IAEAvB,GAAG,gDAAgD;QACjD,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACG,KAAK,EAAED,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACI,IAAI,EAAEF,IAAI,CAAC;QAClCJ,OAAOF,OAAQI,OAAO,CAACK,KAAK,EAAEH,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACM,KAAK,EAAEJ,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACU,YAAY,EAAER,IAAI,CAAC;QAC1CJ,OAAOF,OAAQgB,UAAU,EAAEC,eAAe,CAAC;IAC7C;IAEAvB,GAAG,iEAAiE;QAClE,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACG,KAAK,EAAED,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACI,IAAI,EAAEF,IAAI,CAAC;QAClCJ,OAAOF,OAAQI,OAAO,CAACK,KAAK,EAAEH,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACM,KAAK,EAAEJ,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACU,YAAY,EAAER,IAAI,CAAC;QAC1CJ,OAAOF,OAAQI,OAAO,CAACc,KAAK,EAAEC,SAAS,CAAC;QACxCjB,OAAOF,OAAQgB,UAAU,EAAEC,eAAe,CAAC;IAC7C;IAEAvB,GAAG,4CAA4C;QAC7C,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACG,KAAK,EAAED,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACI,IAAI,EAAEF,IAAI,CAAC;QAClCJ,OAAOF,OAAQI,OAAO,CAACgB,QAAQ,EAAEd,IAAI,CAAC;QACtCJ,OAAOF,OAAQI,OAAO,CAACU,YAAY,EAAER,IAAI,CAAC;QAC1CJ,OAAOF,OAAQI,OAAO,CAACW,SAAS,EAAET,IAAI,CAAC;QACvCJ,OAAOF,OAAQgB,UAAU,EAAEC,eAAe,CAAC;IAC7C;IAEAvB,GAAG,2CAA2C;QAC5C,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAC3BO,OAAOF,QAAQqB,aAAa;IAC9B;IAEA3B,GAAG,8CAA8C;QAC/C,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACI,IAAI,EAAEF,IAAI,CAAC;QAClCJ,OAAOF,OAAQI,OAAO,CAACK,KAAK,EAAEH,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACM,KAAK,EAAEJ,IAAI,CAAC;QACnCJ,OAAOF,OAAQgB,UAAU,EAAEC,eAAe,CAAC;IAC7C;IAEAvB,GAAG,4DAA4D;QAC7D,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACK,KAAK,EAAEH,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACkB,OAAO,EAAEhB,IAAI,CAAC;QACrCJ,OAAOF,OAAQkB,KAAK,EAAEC,SAAS,CAAC;QAChCjB,OAAOF,OAAQgB,UAAU,EAAEO,YAAY,CAAC;IAC1C;AACF"}