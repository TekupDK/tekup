{"version":3,"sources":["C:\\Users\\empir\\Tekup-org\\apps\\flow-api\\src\\ingestion\\parsers\\3match.spec.ts"],"sourcesContent":["import { parse3match } from './3match.js';\r\nimport { RawEmailInput } from '../types.js';\r\n\r\ndescribe('3match Parser', () => {\r\n  it('parses 3match email with portal link', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@rendetalje.dk',\r\n      subject: 'Nyt lead fra 3match',\r\n      from: 'no-reply@app.3match.dk',\r\n      rawText: 'Hej Rendetalje,\\n\\nDu har modtaget et nyt lead gennem 3match.\\n\\nKlik her for at se detaljerne: https://app.3match.dk/leads/12345\\n\\nVenlig hilsen\\n3match Team'\r\n    };\r\n    \r\n    const result = parse3match(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('3match');\r\n    expect(result!.payload.brand).toBe('rendetalje');\r\n    expect(result!.payload.needs_portal_fetch).toBe(true);\r\n    expect(result!.payload.portal_url).toBe('https://app.3match.dk/leads/12345');\r\n    expect(result!.confidence).toBeGreaterThan(0.8);\r\n  });\r\n\r\n  it('parses 3match email with different portal URL format', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@foodtruck.dk',\r\n      subject: 'Nyt lead fra 3match',\r\n      from: 'no-reply@3match.dk',\r\n      rawText: 'Du har modtaget et nyt lead!\\n\\nSe detaljer her: https://app.3match.dk/leads/view/67890\\n\\nMvh\\n3match'\r\n    };\r\n    \r\n    const result = parse3match(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('3match');\r\n    expect(result!.payload.brand).toBe('foodtruck');\r\n    expect(result!.payload.needs_portal_fetch).toBe(true);\r\n    expect(result!.payload.portal_url).toBe('https://app.3match.dk/leads/view/67890');\r\n    expect(result!.confidence).toBeGreaterThan(0.8);\r\n  });\r\n\r\n  it('returns undefined for non-3match emails', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@rendetalje.dk',\r\n      subject: 'Random email',\r\n      from: 'random@example.com',\r\n      rawText: 'This is not a 3match email'\r\n    };\r\n    \r\n    const result = parse3match(input);\r\n    expect(result).toBeUndefined();\r\n  });\r\n\r\n  it('handles emails with multiple 3match links', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@tekup.dk',\r\n      subject: 'Multiple 3match links',\r\n      from: 'no-reply@app.3match.dk',\r\n      rawText: 'Check these links:\\nhttps://app.3match.dk/leads/11111\\nhttps://app.3match.dk/leads/22222\\n\\nFirst one is the correct lead.'\r\n    };\r\n    \r\n    const result = parse3match(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('3match');\r\n    expect(result!.payload.brand).toBe('tekup');\r\n    expect(result!.payload.needs_portal_fetch).toBe(true);\r\n    // Should pick the first link\r\n    expect(result!.payload.portal_url).toBe('https://app.3match.dk/leads/11111');\r\n    expect(result!.confidence).toBeGreaterThan(0.8);\r\n  });\r\n\r\n  it('handles emails with no links but 3match branding', () => {\r\n    const input: RawEmailInput = {\r\n      mailbox: 'leads@rendetalje.dk',\r\n      subject: 'Nyt lead fra 3match',\r\n      from: 'support@3match.dk',\r\n      rawText: 'Hej,\\n\\nDu har modtaget et nyt lead gennem 3match platformen.\\n\\nLog ind p√• portalen for at se detaljerne.\\n\\nVenlig hilsen\\n3match Support'\r\n    };\r\n    \r\n    const result = parse3match(input);\r\n    \r\n    expect(result).toBeDefined();\r\n    expect(result!.payload.source).toBe('3match');\r\n    expect(result!.payload.brand).toBe('rendetalje');\r\n    expect(result!.payload.needs_portal_fetch).toBe(true);\r\n    expect(result!.payload.partial).toBe(true);\r\n    expect(result!.confidence).toBeGreaterThan(0.5);\r\n    expect(result!.confidence).toBeLessThan(0.8);\r\n  });\r\n});"],"names":["describe","it","input","mailbox","subject","from","rawText","result","parse3match","expect","toBeDefined","payload","source","toBe","brand","needs_portal_fetch","portal_url","confidence","toBeGreaterThan","toBeUndefined","partial","toBeLessThan"],"mappings":";;;;wBAA4B;AAG5BA,SAAS,iBAAiB;IACxBC,GAAG,wCAAwC;QACzC,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACG,KAAK,EAAED,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACI,kBAAkB,EAAEF,IAAI,CAAC;QAChDJ,OAAOF,OAAQI,OAAO,CAACK,UAAU,EAAEH,IAAI,CAAC;QACxCJ,OAAOF,OAAQU,UAAU,EAAEC,eAAe,CAAC;IAC7C;IAEAjB,GAAG,wDAAwD;QACzD,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACG,KAAK,EAAED,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACI,kBAAkB,EAAEF,IAAI,CAAC;QAChDJ,OAAOF,OAAQI,OAAO,CAACK,UAAU,EAAEH,IAAI,CAAC;QACxCJ,OAAOF,OAAQU,UAAU,EAAEC,eAAe,CAAC;IAC7C;IAEAjB,GAAG,2CAA2C;QAC5C,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAC3BO,OAAOF,QAAQY,aAAa;IAC9B;IAEAlB,GAAG,6CAA6C;QAC9C,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACG,KAAK,EAAED,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACI,kBAAkB,EAAEF,IAAI,CAAC;QAChD,6BAA6B;QAC7BJ,OAAOF,OAAQI,OAAO,CAACK,UAAU,EAAEH,IAAI,CAAC;QACxCJ,OAAOF,OAAQU,UAAU,EAAEC,eAAe,CAAC;IAC7C;IAEAjB,GAAG,oDAAoD;QACrD,MAAMC,QAAuB;YAC3BC,SAAS;YACTC,SAAS;YACTC,MAAM;YACNC,SAAS;QACX;QAEA,MAAMC,SAASC,IAAAA,mBAAW,EAACN;QAE3BO,OAAOF,QAAQG,WAAW;QAC1BD,OAAOF,OAAQI,OAAO,CAACC,MAAM,EAAEC,IAAI,CAAC;QACpCJ,OAAOF,OAAQI,OAAO,CAACG,KAAK,EAAED,IAAI,CAAC;QACnCJ,OAAOF,OAAQI,OAAO,CAACI,kBAAkB,EAAEF,IAAI,CAAC;QAChDJ,OAAOF,OAAQI,OAAO,CAACS,OAAO,EAAEP,IAAI,CAAC;QACrCJ,OAAOF,OAAQU,UAAU,EAAEC,eAAe,CAAC;QAC3CT,OAAOF,OAAQU,UAAU,EAAEI,YAAY,CAAC;IAC1C;AACF"}