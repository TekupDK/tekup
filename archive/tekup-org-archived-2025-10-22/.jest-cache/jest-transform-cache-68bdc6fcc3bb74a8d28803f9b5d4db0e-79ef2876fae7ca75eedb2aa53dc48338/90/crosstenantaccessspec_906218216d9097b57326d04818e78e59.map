{"version":3,"sources":["C:\\Users\\empir\\Tekup-org\\apps\\flow-api\\src\\lead\\cross-tenant-access.spec.ts"],"sourcesContent":["import { NotFoundException } from '@nestjs/common';\r\n\r\ndescribe('Cross-Tenant Access Handling', () => {\r\n  describe('Error Mapping Logic', () => {\r\n    it('should map Prisma P2004 errors to NotFoundException', () => {\r\n      // Simulate a Prisma P2004 error (insufficient permissions)\r\n      const prismaError: any = new Error('Insufficient permissions');\r\n      prismaError.code = 'P2004';\r\n      \r\n      // This is the logic we implemented in LeadService.changeStatus\r\n      try {\r\n        if (prismaError.code === 'P2004') {\r\n          throw new NotFoundException('Lead not found', 'lead_not_found');\r\n        }\r\n        // If we get here, the error wasn't mapped correctly\r\n        fail('Expected NotFoundException to be thrown');\r\n      } catch (error: any) {\r\n        expect(error).toBeInstanceOf(NotFoundException);\r\n        expect(error.message).toBe('Lead not found');\r\n      }\r\n    });\r\n\r\n    it('should handle other errors appropriately', () => {\r\n      // Simulate a generic error\r\n      const genericError: any = new Error('Generic database error');\r\n      \r\n      // Verify it's not a P2004 error\r\n      expect(genericError.code).not.toBe('P2004');\r\n      \r\n      // In the actual implementation, this would be handled differently\r\n      // For this test, we just verify the logic flow\r\n      const isP2004 = genericError.code === 'P2004';\r\n      expect(isP2004).toBe(false);\r\n    });\r\n  });\r\n});"],"names":["describe","it","prismaError","Error","code","NotFoundException","fail","error","expect","toBeInstanceOf","message","toBe","genericError","not","isP2004"],"mappings":";;;;wBAAkC;AAElCA,SAAS,gCAAgC;IACvCA,SAAS,uBAAuB;QAC9BC,GAAG,uDAAuD;YACxD,2DAA2D;YAC3D,MAAMC,cAAmB,IAAIC,MAAM;YACnCD,YAAYE,IAAI,GAAG;YAEnB,+DAA+D;YAC/D,IAAI;gBACF,IAAIF,YAAYE,IAAI,KAAK,SAAS;oBAChC,MAAM,IAAIC,yBAAiB,CAAC,kBAAkB;gBAChD;gBACA,oDAAoD;gBACpDC,KAAK;YACP,EAAE,OAAOC,OAAY;gBACnBC,OAAOD,OAAOE,cAAc,CAACJ,yBAAiB;gBAC9CG,OAAOD,MAAMG,OAAO,EAAEC,IAAI,CAAC;YAC7B;QACF;QAEAV,GAAG,4CAA4C;YAC7C,2BAA2B;YAC3B,MAAMW,eAAoB,IAAIT,MAAM;YAEpC,gCAAgC;YAChCK,OAAOI,aAAaR,IAAI,EAAES,GAAG,CAACF,IAAI,CAAC;YAEnC,kEAAkE;YAClE,+CAA+C;YAC/C,MAAMG,UAAUF,aAAaR,IAAI,KAAK;YACtCI,OAAOM,SAASH,IAAI,CAAC;QACvB;IACF;AACF"}