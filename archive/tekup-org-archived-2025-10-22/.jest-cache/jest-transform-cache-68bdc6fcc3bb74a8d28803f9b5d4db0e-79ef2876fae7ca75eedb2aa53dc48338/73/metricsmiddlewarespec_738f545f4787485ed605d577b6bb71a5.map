{"version":3,"sources":["C:\\Users\\empir\\Tekup-org\\apps\\flow-api\\src\\metrics\\metrics.middleware.spec.ts"],"sourcesContent":["import { MetricsMiddleware } from './metrics.middleware';\r\nimport { MetricsService } from './metrics.service';\r\n\r\ndescribe('MetricsMiddleware', () => {\r\n  let middleware: MetricsMiddleware;\r\n  let metricsService: any;\r\n\r\n  beforeEach(() => {\r\n    metricsService = {\r\n      increment: jest.fn(),\r\n      histogram: jest.fn(),\r\n    };\r\n    middleware = new MetricsMiddleware(metricsService);\r\n  });\r\n\r\n  describe('use', () => {\r\n    it('should record metrics on response finish', () => {\r\n      const req = {\r\n        method: 'GET',\r\n        path: '/leads/123',\r\n        route: { path: '/leads/:id' },\r\n      } as any;\r\n      const res = {\r\n        statusCode: 200,\r\n        on: jest.fn((event, callback) => {\r\n          if (event === 'finish') {\r\n            callback();\r\n          }\r\n        }),\r\n      } as any;\r\n      const next = jest.fn();\r\n\r\n      middleware.use(req, res, next);\r\n\r\n      expect(next).toHaveBeenCalled();\r\n      expect(res.on).toHaveBeenCalledWith('finish', expect.any(Function));\r\n    });\r\n  });\r\n\r\n  describe('normalizeRoute', () => {\r\n    it('should normalize route paths', () => {\r\n      // Test the actual implementation of normalizeRoute\r\n      expect(middleware['normalizeRoute']('/leads/123')).toBe('/leads/:id/');\r\n      expect(middleware['normalizeRoute']('/leads/123/')).toBe('/leads/:id/');\r\n      // Test edge cases\r\n      expect(middleware['normalizeRoute']('/leads')).toBe('/leads');\r\n      expect(middleware['normalizeRoute']('/')).toBe('/');\r\n    });\r\n  });\r\n});"],"names":["describe","middleware","metricsService","beforeEach","increment","jest","fn","histogram","MetricsMiddleware","it","req","method","path","route","res","statusCode","on","event","callback","next","use","expect","toHaveBeenCalled","toHaveBeenCalledWith","any","Function","toBe"],"mappings":";;;;mCAAkC;AAGlCA,SAAS,qBAAqB;IAC5B,IAAIC;IACJ,IAAIC;IAEJC,WAAW;QACTD,iBAAiB;YACfE,WAAWC,KAAKC,EAAE;YAClBC,WAAWF,KAAKC,EAAE;QACpB;QACAL,aAAa,IAAIO,oCAAiB,CAACN;IACrC;IAEAF,SAAS,OAAO;QACdS,GAAG,4CAA4C;YAC7C,MAAMC,MAAM;gBACVC,QAAQ;gBACRC,MAAM;gBACNC,OAAO;oBAAED,MAAM;gBAAa;YAC9B;YACA,MAAME,MAAM;gBACVC,YAAY;gBACZC,IAAIX,KAAKC,EAAE,CAAC,CAACW,OAAOC;oBAClB,IAAID,UAAU,UAAU;wBACtBC;oBACF;gBACF;YACF;YACA,MAAMC,OAAOd,KAAKC,EAAE;YAEpBL,WAAWmB,GAAG,CAACV,KAAKI,KAAKK;YAEzBE,OAAOF,MAAMG,gBAAgB;YAC7BD,OAAOP,IAAIE,EAAE,EAAEO,oBAAoB,CAAC,UAAUF,OAAOG,GAAG,CAACC;QAC3D;IACF;IAEAzB,SAAS,kBAAkB;QACzBS,GAAG,gCAAgC;YACjC,mDAAmD;YACnDY,OAAOpB,UAAU,CAAC,iBAAiB,CAAC,eAAeyB,IAAI,CAAC;YACxDL,OAAOpB,UAAU,CAAC,iBAAiB,CAAC,gBAAgByB,IAAI,CAAC;YACzD,kBAAkB;YAClBL,OAAOpB,UAAU,CAAC,iBAAiB,CAAC,WAAWyB,IAAI,CAAC;YACpDL,OAAOpB,UAAU,CAAC,iBAAiB,CAAC,MAAMyB,IAAI,CAAC;QACjD;IACF;AACF"}