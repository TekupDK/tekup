{
  "name": "tekup-monorepo",
  "private": true,
  "type": "module",
  "packageManager": "pnpm@10.15.1",
  "engines": {
    "node": ">=20.10.0"
  },
  "scripts": {
    "postinstall": "node scripts/env-auto.mjs && pnpm -w run playwright:install",
    "dev": "pnpm -r --parallel dev",
    "build": "pnpm -r build",
    "start": "pnpm -r start",
    "lint": "pnpm -r lint",
    "test": "pnpm -r run test",
    "test:ci": "pnpm -r run test:ci",
    "coverage": "pnpm -r run coverage",
    "flakes": "pnpm -r run flakes --workspace-concurrency=1",
    "e2e": "pnpm -w --filter ./apps/* run e2e",
    "e2e:ci": "pnpm -w --filter ./apps/* run e2e:ci",
    "contract": "pnpm -w --filter ./services/* run contract",
    "contract:ci": "pnpm -w --filter ./services/* run contract:ci",
    "compose:up": "docker compose -f docker-compose.test.yml up -d --build",
    "compose:down": "docker compose -f docker-compose.test.yml down -v",
    "compose:logs": "docker compose -f docker-compose.test.yml logs -f",
    "playwright:install": "pnpm dlx playwright install --with-deps",
    "migrate:test": "powershell -NoProfile -ExecutionPolicy Bypass -File ./scripts/migrate-test.ps1",
    "typecheck": "pnpm -r typecheck || echo 'typecheck fallback (some packages may not define script)'",
    "ci": "pnpm install --frozen-lockfile && node ci-env-guard.cjs && pnpm lint && pnpm typecheck && pnpm test:ci && pnpm build",
    "format": "prettier --write .",
    "config:print": "pnpm --filter @tekup/config build && node packages/config/dist/print.js",
    "config:check": "pnpm --filter @tekup/config build && node -e \"import('@tekup/config').then(()=>console.log('config ok'))\"",
    "bootstrap": "pnpm install && pnpm -r build",
    "crm:dev": "pnpm -C apps/tekup-crm-api nest start --watch",
    "crm:build": "pnpm -C apps/tekup-crm-api nest build",
    "crm:test": "pnpm -C apps/tekup-crm-api jest --runInBand",
    "crm:web:dev": "pnpm -C apps/tekup-crm-web next dev",
    "env:auto": "node scripts/env-auto.mjs",
    "docs:typedoc": "node scripts/generate-typedoc.mjs",
    "docs:typedoc:build": "node scripts/build-typedoc.mjs",
    "docs:typedoc:watch": "nodemon --watch packages --ext ts,tsx,js,jsx --exec \"node scripts/generate-typedoc.mjs\"",
    "docs:openapi": "node scripts/extract-openapi.mjs",
    "docs:openapi:generate": "node scripts/generate-openapi.mjs",
    "docs:openapi:setup": "node scripts/setup-swagger.mjs",
    "docs:site": "pnpm -C docs/site build",
    "docs:dev": "pnpm -C docs/site start",
    "docs:all": "pnpm -w build && pnpm docs:typedoc && pnpm docs:openapi && pnpm docs:site",
    "changeset": "changeset",
    "version-packages": "changeset version",
    "release": "pnpm build && changeset publish",
    "mcp:validate": "tsx .mcp/scripts/validate-config.ts",
    "mcp:validate:all": "tsx .mcp/scripts/validate-config.ts batch '.mcp/configs/**/*.json'",
    "mcp:validate:test": "tsx .mcp/scripts/validate-config.ts test --generate-samples --test-invalid --verbose",
    "mcp:schema:info": "tsx .mcp/scripts/validate-config.ts info .mcp/schemas/mcp-config.schema.json --show-examples",
    "docker:mcp:dev": "docker-compose -f .mcp/docker/docker-compose.dev.yml up -d",
    "docker:mcp:dev:build": "docker-compose -f .mcp/docker/docker-compose.dev.yml build",
    "docker:mcp:dev:down": "docker-compose -f .mcp/docker/docker-compose.dev.yml down -v",
    "docker:mcp:dev:logs": "docker-compose -f .mcp/docker/docker-compose.dev.yml logs -f",
    "docker:mcp:prod": "docker-compose -f .mcp/docker/docker-compose.prod.yml up -d",
    "docker:mcp:staging": "docker-compose -f .mcp/docker/docker-compose.staging.yml up -d",
    "docker:mcp:build:all": "cd .mcp/docker && docker build -t tekup/mcp-gateway:latest gateway/ && docker build -t tekup/mcp-browser:latest browser/ && docker build -t tekup/mcp-filesystem:latest filesystem/ && docker build -t tekup/mcp-search:latest search/",
  "docker:mcp:push:all": "docker push tekup/mcp-gateway:latest && docker push tekup/mcp-browser:latest && docker push tekup/mcp-filesystem:latest && docker push tekup/mcp-search:latest",
  "health:scan": "node scripts/health-scan.mjs",
  "health:scan:ci": "node scripts/health-scan.mjs --strict --include-tcp --json"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@changesets/changelog-github": "^0.5.0",
    "@changesets/cli": "^2.27.1",
    "@eslint/js": "^9.35.0",
    "@faker-js/faker": "^10.0.0",
    "@playwright/test": "^1.55.0",
    "@swc/core": "^1.13.5",
    "@swc/jest": "^0.2.39",
    "@types/jest": "^29.5.12",
    "@types/node": "^24.3.1",
    "@typescript-eslint/eslint-plugin": "^8.43.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "docusaurus": "^1.14.7",
    "dotenv": "^16.6.1",
    "dredd": "^14.1.0",
    "eslint": "^9.35.0",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsdoc": "^48.11.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "fishery": "^2.3.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "lint-staged": "^15.5.2",
    "nodemon": "^3.1.4",
    "playwright": "^1.40.0",
    "prettier": "^3.3.3",
    "rimraf": "^6.0.1",
    "seedrandom": "^3.0.5",
    "tailwindcss": "^4.1.13",
    "testcontainers": "^10.0.0",
    "ts-node": "^10.9.2",
    "typedoc": "^0.26.7",
    "typescript": "^5.6.3",
    "typescript-eslint": "^8.43.0",
    "zod": "^4.1.5",
    "ajv": "^8.12.0",
    "ajv-formats": "^2.1.1",
    "commander": "^12.1.0",
    "chalk": "^5.3.0",
    "glob": "^10.3.10",
    "tsx": "^4.11.0",
    "express": "^4.18.2",
    "http-proxy-middleware": "^2.0.6",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "compression": "^1.7.4",
    "express-rate-limit": "^7.1.5",
    "socket.io": "^4.7.4",
    "prom-client": "^15.1.0",
    "lodash-es": "^4.17.21",
    "winston": "^3.11.0",
    "yaml": "^2.3.4"
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.17.5",
    "@nestjs/mapped-types": "^2.1.0",
    "ws": "^8.18.3"
  }
}